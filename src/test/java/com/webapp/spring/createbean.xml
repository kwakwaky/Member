<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

<!-- spring 내부적으로 CityDao를 new함 -->
<bean id="cityDao" class="com.webapp.spring.CityDao" 
				   factory-method="newInstance"> <!-- static method를 통해서 객체 만드는 경우 -->
<!-- 	<constructor-arg> -->
<!-- 		<value>1</value> -->
<!-- 	</constructor-arg> -->
<!-- 	<constructor-arg value="1"/> -->
</bean>

<!-- 밑의 MyFactoryBean과 같은기능 -->
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="configLocation" value="mybatis/mybatis_config.xml"/>
	<!-- dataSurce가 오버라이드 되기 때문에 이곳에서 설정해줘야함 -->
	<property name="dataSource" ref="dataSource"/>
</bean>

<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSessionFactoryBean"/>
</bean>


<!-- MyFactoryBean의 실제 타입은 SqlSessionFactory이다. -->
<!-- getObject했을 때 리턴하는 타입 -->
<!-- <bean id="myFactoryBean" class="com.webapp.spring.MyFactoryBean"> -->

<!-- </bean> -->

<!-- DataSource -->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	<property name="username">
		<value>scott</value>
	</property>
	<property name="password">
		<value>tiger</value>
	</property>
	<property name="maxActive" value="10"/>
	<property name="maxWait" value="-1"/> <!-- 무한대기 -->
</bean>

</beans>
